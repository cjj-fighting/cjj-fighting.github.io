[{"title":"React入门系列之一","date":"2019-04-07T02:44:17.000Z","path":"2019/04/07/React入门系列之一/","text":"快速安装使用脚手架快速安装 本文借鉴自阮一峰老师的文章 http://www.ruanyifeng.com/blog/2015/03/react.html 慕课网视频 https://coding.imooc.com/class/229.html react官方文档 https://reactjs.org/ 历史 2013年由FaceBook开源 在16.0版本以后备成为React Fiber，其底层框架有重大更新 react使用 引入react.js 脚手架 react脚手架 npm &lt; 5.2 12npm install -g create-react-appcreate-react-app my-app Node &gt;= 6 &amp; npm &gt;= 5.2 1npx create-react-app my-app 创建完成候执行代码： 12cd my-appnpm start","tags":[{"name":"react快速安装","slug":"react快速安装","permalink":"http://yoursite.com/tags/react快速安装/"}]},{"title":"页面回流和页面重绘","date":"2019-02-14T23:23:00.000Z","path":"2019/02/15/页面回流和页面重绘/","text":"本文借鉴自以下文章: https://www.cnblogs.com/slly/p/6640761.html https://baijiahao.baidu.com/s?id=1593097105869520145&amp;wfr=spider&amp;for=pc 不为别的,只为记录.以便以后翻阅. 这里要先讲一下浏览器的渲染过程 解析HTML生成DOM树 解析CSS生成CSS Rule Tree (规则树) 将DOM树和CSS Rule Tree (规则树)合并生成Rendering Tree (渲染树) 遍历Rendering Tree (渲染树)布局,绘制页面 DOM树 + CSS Rule Tree (规则树) –&gt; Rendering Tree (渲染树) 讲完了浏览器的渲染过程,下面该回归正题了:回流(reflow) 由于页面布局等改变影响了布局,导致需要重新渲染,这个过程称为回流. 即: 某元素发生了几何尺寸和位置的变化, 且==回流必定引起重绘== 重绘(repaint) 改变某个元素的背景色、文字颜色、边框颜色等等不影响其他布局时,称为重绘. 即: 某元素未发生了几何尺寸和位置的变化 注: display:none 的节点不会被加入Render Tree，而visibility: hidden 则会，所以，如果某个节点最开始是不显示的 display:none 会触发 reflow，而 visibility:hidden 只会触发 repaint，因为没有发现位置变化 有些情况下，比如修改了元素的样式，浏览器并不会立刻reflow 或 repaint 一次，而是会把这样的操作积攒一批，然后做一次 reflow，这又叫异步 reflow 或增量异步 reflow。但是在有些情况下，比如resize 窗口，改变了页面默认的字体等。对于这些操作，浏览器会马上进行 reflow","tags":[{"name":"浏览器","slug":"浏览器","permalink":"http://yoursite.com/tags/浏览器/"}]},{"title":"函数防抖和函数节流","date":"2019-02-14T23:22:29.000Z","path":"2019/02/15/函数防抖和函数节流/","text":"函数防抖和函数节流概念不好理解,易混淆,遂查阅了多方文章 本文借鉴自以下文章: https://www.jianshu.com/p/b73c2acad696https://zhuanlan.zhihu.com/p/38313717 不为别的,只为记录.以便以后翻阅. 概念之前接触到这两个概念是在刷掘金的时候,看到有人发出的大厂面试题,然后就去百度了何为函数防抖和函数节流.其实这两者本质都是为了优化高频执行js代码.这两者的概念很相似,都是在一段时间内执行一次,但是他们的应用场景是不同的.函数防抖 指在频繁操作下,执行最后一次操作,即重复操作将不执行,在到达所设置的时间时才去执行. 例如搜索框,监听用户输入,在一定时间段内持续输入将不执行.用户不触发时才执行setTimeout. 这里用重复点击模拟. 12345678910&lt;button onclick=\"submit()\"&gt;点我函数防抖&lt;/button&gt;var timer = false;function submit() &#123; clearTimeout(timer); // 将上次未执行的代码先清除掉 timer = setTimeout(function() &#123; console.log(\"函数防抖\") &#125;, 3000);&#125;submit(); 函数节流 指在指定时间段内只执行一次,即设置一个变量当标志位,记录当前代码是否在执行,若在执行则return,相反则执行.常用于动画相关的场景. 例如下拉刷新. 这里用重复点击模拟. 123456789101112131415&lt;button onclick=\"submit()\"&gt;点我函数节流&lt;/button&gt;// 函数节流var canRun = true;function submit()&#123; if(!canRun)&#123; // 判断是否在执行，如果在执行中，则直接return return; &#125; canRun = false; setTimeout(function()&#123; console.log(\"函数节流\"); canRun = true; &#125;, 3000);&#125;;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"浏览器输入URL到页面渲染发生了什么","date":"2019-02-14T23:21:55.000Z","path":"2019/02/15/浏览器输入URL到页面渲染发生了什么/","text":"本文借鉴自以下文章: https://blog.csdn.net/chanzhi2016/article/details/78581044 不为别的,只为记录.以便以后翻阅. 一、DNS域名解析将域名解析成对应的IP地址,首先查找本地的hosts文件,是否有响应的域名,IP对应关系,有则发请求,没有则去找DNS服务器解析过程 浏览器===(发送含.com域名查询报文)===&gt;本地DNS服务器===(转发)===&gt;根DNS服务器===(返回comDNS服务器地址)===&gt;本地DNS===(发送.com域名查询报文)===&gt;comDNS服务器===(返回IP地址)===&gt;本地DNS===(返回报文)===&gt;客户端 从客户端到本地服务器属于递归查询，而DNS服务器之间的交互属于迭代查. 二、TCP建立连接(三次握手) 本段借鉴自以下文章: https://blog.csdn.net/younglao/article/details/79453777 https://baijiahao.baidu.com/s?id=1596016296668694374&amp;wfr=spider&amp;for=pc 三次握手 第一次: 建立连接时,客户端发送SYN包(同步序列编号,即syn=j)到服务器,并进入SYN_SEND状态,等待服务器确认. 第二次: 服务器收到SYN包,必须确认SYN(ack = j + 1),同事自己也发送一个SYN包(syn = k),即SYN+ACK包,此时服务器进入SYN_RCVD状态 第三次: 客户端收到服务器的SYN+ACK包,想服务器发送确认包ACK(ack=k + 1),此包发送完毕,客户端和服务器进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。 流程如下: 客户端===(发送SNK包)===&gt;服务器===(发送ACK+SNY包)===&gt;客户端===(发送ACK包)===&gt;服务器 注: SYN攻击(DDOS共计类型)可执行命令#netstat -nap | grep SYN_RECV三、发送http请求此处不做赘述 四、服务器处理请求此处不做赘述 五、返回相应结果 http状态码: 1xx 信息状态码 请求正在处理 2xx 成功状态码 请求正常处理完毕 3xx 重定向状态码 需进行附加操作 4xx 客户端错误状态码 服务器无法处理请求 5xx 服务器错误状态码 服务器处理请求出错 六、关闭TCP连接(四次挥手) 为了避免服务器于客户端双方的资源占用和损耗,当双方没有请求或相应时, 任意一方都可以发起关闭请求 四次挥手 第一次: Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态. 第二次: Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态. 第三次: Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态. 第四次: Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手. ==注:== 为什么建立连接是三次握手，而关闭连接却是四次挥手呢？​ 这是因为服务端在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端;而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方也未必全部数据都发送给对方了，所以己方可以立即close，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送. 七、浏览器解析HTML此处不做赘述 八、浏览器布局渲染此处不做赘述","tags":[{"name":"浏览器","slug":"浏览器","permalink":"http://yoursite.com/tags/浏览器/"}]},{"title":"英语口语02","date":"2018-09-13T07:18:48.000Z","path":"2018/09/13/英语口语02/","text":"# Where Has Time Gone?1. Days of the week, months of the year, and common phrase with days &amp; months.星期和月份这些单词及有关的俗语-1.1星期的表达及常用短语 【Monday】【Tuesday】【Wednesday】【Thursday】【Friday】【Saturday】【Sunday】 There are seven days in a week. 一周一共有七天。 Monday is the first day of the week. 星期一是一周的第一天。 What do you usually do on Monday? 你周一通常做什么呢。 On Monday, I always have a meeting. 周一我有个约会。 Tuesday is the new Monday. 周二就想是新的周一。 I ofen listen to music on Tuesday. 周二我通常会听歌。 Monday blues = 周一不想上班的忧郁绝望的心情 blue = 忧伤的，忧郁的 Many people have Monday blues. 星期一的时候很烦多人心情低落，烦躁不安。 hump day = 星期三 On Wednesday, I clean my room. 周三我会打扫我的房间。 weekday = 工作日 weekend = 周末 Happy weekend! / Have a good weekend! 周末愉快 T.G.I.F = Thank God It&#39;s Friday! 终于到周五了！ Black Friday = 黑色星期五 / 美国人的“双十一” 来历： 传统上，商场用红色笔记录亏损，黑笔记录盈利。这一天商场打折吸引了大量顾客，营业额大增。所以有了【Black Friday】的说法 The weekend days are Saturday and Sunday. 周末就是周六和周日。 I dont&#39;t work on weekends. 我周末不用上班。 Sunday night blues 星期天夜晚“忧郁症” On XXday, I... = 在星期几，我… On Monday, I always have a meeting. 在周一，我有一个会。 Days of the week Sunday sun. Monday Mon. Tuessday Tues. Wednesday Wed. Thursday Thurs. Friday Fri. Saturday Sat. -1.2月份的表达&amp;序数词 January is the first month of the year. 一月是一年的第一个月。 quarter = 季度 the first quarter = 第一季度 the second quarter = 第二季度 the third quarter = 第三季度 the fourth quarter = 第四季度 solar calendar = 阳历 lunarcalendar = 阴历 阳历是根据地球绕太阳公转的运动周期为基础所定制的历法；农历（阴历）是按照月亮的月相周期来安排的历法。 Chinese New Year = 新年 April Fool&#39;s Day = 愚人节（四月一号） Where is Mother&#39;s Day? 母亲节在什么时候。 Mother&#39;s Day is in May. 母亲节在五月份。 Where is Father’s Day?` 父亲节在什么时候。 Father&#39;s Day is in june. 父亲节在六月份。 介词on和介词in，后面可以家表示时间的词 【on + 日子】 如：on Sunday 【in + 日子】 如：in June one / first / January / Jan. two / second / February / Feb. three / third / March/ Mar. four / fourth / April / Apr. five / fifth / May / May six / sixth / June / June seven / seventh / July / July eight / eighth / August / Aug. nine / ninth / Aeptember / Sept. ten / tenth / October / Oct. eleven / eleventh / November / Nov. twelve / twelfth / December / Dec. 2.How to describe your favorite day / month.如何去描述自己喜欢的日子或月份 What&#39;s your favorite day of the week? 一周当中，你最喜欢哪一天？ My favorite day is Friday. because it&#39;s the last day. 我最喜欢星期五。星期五是工作日的最后一天。 What&#39;s your favorite month of the year? 你最喜欢的是哪个月份？ December is my favorite month of the year,because I love cold weather. 我喜欢十二月，因为我喜欢寒冷的天气。 I love January, because I was born in January. 我出生在十一月，所以我喜欢十一月.","tags":[{"name":"英语口语","slug":"英语口语","permalink":"http://yoursite.com/tags/英语口语/"}]},{"title":"英语口语01","date":"2018-09-13T05:04:51.000Z","path":"2018/09/13/英语口语01/","text":"# I love my family.1. How to introduce you family.如何介绍自己的家庭-1.1介绍成员This is the Jackson family. 这是Jackson一家。 It&#39;s a family of four. 这是一家四口。 It&#39;s a family of ... = 有…个家庭成员，也可以用【There be ...】 句型来介绍 There are 4 people in my famil, my parents, my sister and I. 我家有4个人，我的父母，妹妹和我。 -1.2提问家庭成员How many people are there in your family? 你家里有几个人。 How many childrendo the Jacksons have? Jackson 家有几个孩子。 They have two children.他们有两个孩子。 -1.3描述家庭成员 grandfather / grandpa = 爸爸的爸爸 / 妈妈的爸爸 grandmother / grandfather = 妈妈的妈妈 / 爸爸的妈妈 on...side = 具体说明是爸爸那边还是妈妈那边的 grandmother on my mom&#39;s side = 我的姥姥 My grandmother on my mom&#39;s side lives in Beijing. 我的姥姥住在北京。 uncle = 跟父母同辈份的男性 aunt = 跟父母同辈份的女性 brother = 兄弟 sisters = 姐妹 Do you have any brothers or sisters? 你有兄弟姐妹吗？ cousin = 你父母的兄弟姐妹的孩子 This is my cousin XX. sibling = 兄弟姐妹 I dont&#39;t have any siblings. 我没有兄弟姐妹。 I am the only child in my family. 我是家里的独生子/独生女。 in-law = 通过婚姻而建立 的亲属关系 father-in-law = 配偶的爸爸 mother-in-law = 配偶的妈妈 2.How to talk about jobs and hobbies.如何介绍自己的工作爱好-2.1询问工作What do you parents do? 你的父母是做什么的？ What dose someone do? What dose your boyfriend do? Amy! Amy, 你男朋友是做什么的？ He work in a bank. 他在银行工作。 What is XX&#39;s job? What is your brother&#39;s job? 你哥哥是做什么工作的？ He is a engineer. 他是工程师。 My parents are both teachers. 我的爸爸妈妈都是老师。 My sister and I are both students. 我和我妹妹都是学生。 XX is ... / XX and XX are ... = 做什么工作 My mother is a doctor. 我的妈妈是医生。 XX works for … = 某人为某机构 / 某单位工作 My sister works for the government. 我姐姐为政府工作。 work in ... = 在什么地方工作(不想深聊时) My mother works in a bank. 我妈妈在银行工作。 -2.2介绍爱好 I like something / doing something = 我喜欢… I like hotpot. 我喜欢火锅。 a big fan of XX = …的粉丝 My mother is a big fan of yoga. 我妈妈很喜欢瑜伽。 Can you speak Chinese? 你会讲中文吗？ How is your Chinese? 你中文怎么样？ 表示程度： fairly / pretty /very quite = 非常 I can speak Chinese fairly well, and so can my sister. 我和我妹妹中文都很好。 My Chinese is pretty bad, I can say just a few words. 我中文很糟糕，就会几个单词。 My English is fairly good. 我的英文很好。 take the elevator = 乘电梯 take the stairs = 走楼梯 I usually walk to school. 我通常走路去学校。 Sometimes I get up late. Then I take a bus. 有时候我起晚了，就坐车去学校。 I usually go to walk by bike. 我通常骑自行车去上班。 I usually take the elevator to the 10th floor. 我通常成电梯到10楼。 Then I take the stairs to the 15th floor. 然后走楼梯到15楼。","tags":[{"name":"英语口语","slug":"英语口语","permalink":"http://yoursite.com/tags/英语口语/"}]},{"title":"Hello World","date":"2018-09-12T12:01:09.151Z","path":"2018/09/12/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"CSS3总结系列之三","date":"2017-03-20T09:20:43.000Z","path":"2017/03/20/CSS3总结系列之三/","text":"弹性盒子弹性盒子是 CSS3 的一种新的布局模式；CSS3 弹性盒（ Flexible Box 或 flexbox），是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式；引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间； 主轴：Flex容器的主轴主要用来配置Flex项目，默认是水平方向侧轴：与主轴垂直的轴称作侧轴，默认是垂直方向的方向：默认主轴从左向右，侧轴默认从上到下主轴和侧轴并不是固定不变的，通过flex-direction可以互换。 必要元素： 指定一个盒子为伸缩盒子 display: flex 设置属性来调整此盒的子元素的布局方式 例如 flex-direction 明确主侧轴及方向 可互换主侧轴，也可改变方向 各属性详解 flex-direction调整主轴方向 row （横向从左到右排列（左对齐） 默认）、row-reverse（反转横向排列）、column（纵向排列）、column-reverse（翻转纵向排列） justify-content调整主轴对齐flex-start （弹性项目向行头紧挨着填充，默认）、 flex-end（弹性项目向行尾紧挨着填充）、center（弹性项目居中紧挨着填充）、space-between（弹性项目平均分布在该行上）、space-around（弹性项目平均分布在该行上，两边留有一半的间隔空间） align-items调整侧轴对齐flex-start、flex-end、center 、baseline（如弹性盒子元素的行内轴与侧轴为同一条，则该值与’flex-start’等效。其它情况下，该值将参与基线对齐）、 stretch（如果指定侧轴大小的属性值为’auto’，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照’min/max-width/height’属性的限制） flex-wrap控制是否换行nowrap（默认， 弹性容器为单行，该情况下弹性子项可能会溢出容器）、wrap（多行）wrap-reverse （反转 wrap 排列） align-content堆栈（由flex-wrap产生的独立行）对齐 flex-start | flex-end | center | space-between | space-around | stretch flex-flow是flex-direction、flex-wrap的简写形式 flex子项目在主轴的缩放比例，不指定flex属性，则不参与伸缩分配 order控制子项目的排列顺序，正序方式排序，从小到大 多列布局CSS3 可以将文本内容设计成像报纸一样的多列布局； 属性如下： column-count 指定元素应该被分割的列数column-fill 指定如何填充列column-gap 指定列与列之间的间隙column-rule-color 指定两列间边框的颜色column-rule-style 指定两列间边框的样式column-rule-width 指定两列间边框的厚度column-span 指定元素要跨越多少列column-width 指定列的宽度columns 设置 column-width 和 column-count 的简写column-rule 所有 column-rule- * 属性的简写，可设置颜色，样式，厚度 字体不同浏览器所支持的字体格式是不一样的 TureType(.ttf)格式.ttf字体是Windows和Mac的最常见的字体，是一种RAW格式，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+； OpenType(.otf)格式.otf字体被认为是一种原始的字体格式，其内置在TureType的基础上，支持这种字体的浏览器有Firefox3.5+、Chrome4.0+、Safari3.1+、Opera10.0+、iOS Mobile、Safari4.2+； Web Open Font Format(.woff)格式woff字体是Web字体中最佳格式，他是一个开放的TrueType/OpenType的压缩版本，同时也支持元数据包的分离，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome6+、Safari3.6+、Opera11.1+； Embedded Open Type(.eot)格式.eot字体是IE专用字体，可以从TrueType创建此格式字体，支持这种字体的浏览器有IE4+； SVG(.svg)格式.svg字体是基于SVG字体渲染的一种格式，支持这种字体的浏览器有Chrome4+、Safari3.1+、Opera10.0+、iOS Mobile Safari3.2+；","tags":[{"name":"CSS3","slug":"CSS3","permalink":"http://yoursite.com/tags/CSS3/"}]},{"title":"CSS3总结系列之二","date":"2017-03-20T08:27:59.000Z","path":"2017/03/20/CSS3总结系列之二/","text":"2D转换translate() 方法translate()方法，根据左(X轴)和顶部(Y轴)位置给定的参数，从当前元素位置移动；移动 translate(x, y) 可以改变元素的位置，x、y可为负值： 移动位置相当于自身原来位置 y轴正方向朝下 除了可以像素值，也可以是百分比，相对于自身的宽度或高度 transform: translate(50px,100px); 是从左边元素移动50个像素，并从顶部移动100像素 rotate() 方法rotate()方法，在一个给定度数顺时针旋转的元素。负值是元素逆时针旋转：transform: rotate(30deg); 元素顺时针旋转30度 scale() 方法scale()方法，该元素增加或减少的大小，取决于宽度（X轴）和高度（Y轴）的参数：transform: scale(2,3); 转变宽度为原来的大小的2倍，和其原始大小3倍的高度 skew() 方法transform:skew(angle ,angle);包含两个参数值，分别表示X轴和Y轴倾斜的角度，如果第二个参数为空，则默认为0，参数为负表示向相反方向倾斜,x、y的取值可为小数 skewX(angle);表示只在X轴(水平方向)倾斜; skewY(angle);表示只在Y轴(垂直方向)倾斜; matrix() 方法matrix()方法和2D变换方法合并成一个;matrix 方法有六个参数，包含旋转，缩放，移动（平移）和倾斜功能;transform:matrix(0.866,0.5,-0.5,0.866,0,0);旋转元素30° 3D左手坐标系伸出左手，让拇指和食指成“L”形，大拇指向右，食指向上，中指指向前方。这样我们就建立了一个左手坐标系，拇指、食指和中指分别代表X、Y、Z轴的正方向； 左手法则左手握住旋转轴，竖起拇指指向旋转轴正方向，正向就是其余手指卷曲的方向。 rotateX() 方法 围绕其在一个给定度数X轴旋转的元素 rotateY() 方法 围绕其在一个给定度数Y轴旋转的元素 透视电脑显示屏是一个2D平面，图像之所以具有立体感（3D效果），其实只是一种视觉呈现，通过透视可以实现此目的。透视可以将一个2D平面，在转换的过程当中，呈现3D效果。注：并非任何情况下需要透视效果，根据开发需要进行设置。perspective有两种写法 作为一个属性，设置给父元素，作用于所有3D转换的子元素 作为transform属性的一个值，做用于元素自身 3D呈现设置内嵌的元素在 3D 空间如何呈现，这些子元素必须为转换原素。 flat：所有子元素在 2D 平面呈现 preserve-3d：保留3D空间 3D元素构建是指某个图形是由多个元素构成的，可以给这些元素的父元素设置transform-style: preserve-3d来使其变成一个真正的3D图形 backface-visibility 设置元素背面是否可见 perspective-origin 规定 3D 元素的底部位置 动画当在 @keyframes 创建动画，把它绑定到一个选择器，否则动画不会有任何效果。指定至少这两个CSS3的动画属性绑定向一个选择器： 规定动画的名称 规定动画的时长 注意: 必须定义动画的名称和动画的持续时间。如果省略的持续时间，动画将无法运行，因为默认值是0。 动画是CSS3中具有颠覆性的特征之一，可通过设置多个节点来精确控制一个或一组动画，常用来实现复杂的动画效果 必要元素： 通过@keyframes指定动画序列； 通过百分比将动画序列分割成多个节点； 在各节点中分别定义各属性 通过animation将动画应用于相应元素； 关键属性： animation-name设置动画序列名称 animation-duration动画持续时间 animation-delay定义动画什么时候开始 animation-timing-function动画执行速度，linear（匀速）、ease（默认，动画以低速开始，然后加快，在结束前变慢）、ease-in（低速开始）、ease-out（低速结束）、ease-in-out（低速开始和结束）等 animation-play-state动画播放状态，running、paused等 animation-direction动画逆播，alternate（偶数次反向）、alternate-reverse（奇数次反向）、reverse（反向播放）等，默认normal animation-fill-mode动画执行完毕后状态，forwards、backwards等 animation-iteration-count动画执行次数，inifinate（无限循环），等默认是1 steps(60) 表示动画分成60步完成 参数值的顺序：关于几个值，除了名字，动画时间，延时有严格顺序要求其它随意 动画是使元素从一种样式逐渐变化为另一种样式的效果；可以改变任意多的样式任意多的次数；用百分比来规定变化发生的时间，或用关键词 “from” 和 “to”，等同于 0% 和 100%；0% 是动画的开始，100% 是动画的完成；为了得到最佳的浏览器支持，定义 0% 和 100% 选择器最好；","tags":[{"name":"CSS3","slug":"CSS3","permalink":"http://yoursite.com/tags/CSS3/"}]},{"title":"古诗词系列之一","date":"2017-03-06T08:19:42.000Z","path":"2017/03/06/古诗词系列之一/","text":"本文是在看了《中国诗词大会》后，总结的涉及到的完整诗词，仅个人爱好，陶冶情操…唐·杜甫 《春夜喜雨》 好雨知时节，当春乃发生。 随风潜入夜，润物细无声。 野径云俱黑，江船火独明。 晓看红湿处，花重锦官城。 唐·王维 《送元二使安西》 渭城朝雨浥轻尘，客舍青青柳色新。 劝君更尽一杯酒，西出阳关无故人。 唐·王维 《山居秋暝》 空山新雨后，天气晚来秋。 明月松间照，清泉石上流。 竹喧归浣女，莲动下渔舟。 随意春芳歇，王孙自可留。 唐·李白 《月下独酌》 花间一壶酒，独酌无相亲。 举杯邀明月，对影成三人。 月既不解饮，影徒随我身。 暂伴月将影，行乐须及春。 我歌月徘徊，我舞影零乱。 醒时同交欢，醉后各分散。 永结无情游，相期邈云汉。 唐·李白 《早发白帝城》 朝辞白帝彩云间，千里江陵一日还。 两岸猿声啼不住，轻舟已过万重山。 唐·孟浩然 《过故人庄》 故人具鸡黍，邀我至田家。 绿树村边合，青山郭外斜。 开轩面场圃，把酒话桑麻。 待到重阳日，还来就菊花。 唐·岑参 《白雪歌送武判官归京》 北风卷地白草折，胡天八月即飞雪。 忽如一夜春风来，千树万树梨花开。 散入珠帘湿罗幕，狐裘不暖锦衾薄。 将军角弓不得控，都护铁衣冷难着。 瀚海阑干百丈冰，愁云惨淡万里凝。 中军置酒饮归客，胡琴琵琶与羌笛。 纷纷暮雪下辕门，风掣红旗冻不翻。 轮台东门送君去，去时雪满天山路。 山回路转不见君，雪上空留马行处。 唐·王维 《九月九日忆山东兄弟》 独在异乡为异客，每逢佳节倍思亲。 遥知兄弟登高处，遍插茱萸少一人。 唐·李商隐 《登乐游原》 向晚意不适，驱车登古原。 夕阳无限好，只是近黄昏。 唐·杜牧 《山行》 远上寒山石径斜，白云生处有人家。 停车坐爱枫林晚，霜叶红于二月花。 唐·王维 《竹里馆》 独坐幽篁里，弹琴复长啸。 深林人不知，明月来相照。 唐·崔颢 《黄鹤楼》 昔人已乘黄鹤去，此地空余黄鹤楼。 黄鹤一去不复返，白云千载空悠悠。 晴川历历汉阳树，芳草萋萋鹦鹉洲。 日暮乡关何处是？烟波江上使人愁。 唐·杜牧 《赤壁》 折戟沉沙铁未销，自将磨洗认前朝。 东风不与周郎便，铜雀春深锁二乔。 晋·陶渊明 《饮酒》 结庐在人境，而无车马喧。 问君何能尔？心远地自偏。 采菊东篱下，悠然见南山。 山气日夕佳，飞鸟相与还。 此中有真意，欲辨已忘言。 唐·王维 《使至塞上》 单车欲问边，属国过居延。 征蓬出汉塞，归雁入胡天。 大漠孤烟直，长河落日圆。 萧关逢候吏，都护在燕然。 清·郑燮《竹石》 咬定青山不放松，立根原在破岩中。 千磨万击还坚劲，任尔东西南北风。 唐·贺知章 《回乡偶书》 少小离家老大回， 乡音无改鬓毛催。 儿童相见不相识， 笑问客从何处来。 毛泽东 《七律·长征》 红军不怕远征，万水千山只等闲。 五岭逶迤腾细浪，乌蒙磅礴走泥丸。 金沙水拍云崖暖，大渡桥横铁索寒。 更喜岷山千里雪，三军过后尽开颜。 唐·杜牧 《泊秦淮》 烟笼寒水月笼沙，夜泊秦淮近酒家。 商女不知亡国恨，隔江犹唱后庭花。 宋·苏轼 《卜算子·黄州定慧院寓居作》 缺月挂疏桐，漏断人初静。 谁见幽人独往来，缥缈孤鸿影。 惊起却回头，有恨无人省。 拣尽寒枝不肯栖，寂寞沙洲冷。 唐·温庭钧 《商山早行》 晨起动征铎，客行悲故乡。 鸡声茅店月，人迹板桥霜。 槲叶落山路，枳花明驿墙。 因思杜陵梦，凫雁满回塘。 宋·辛弃疾《永遇乐·京口北固亭怀古》 千古江山，英雄无觅孙仲谋处。 舞榭歌台，风流总被雨打风吹去。 斜阳草树，寻常巷陌，人道寄奴曾住。 想当年，金戈铁马，气吞万里如虎。 唐·杜甫 《闻官军收河南河北》 剑外忽传收蓟北，初闻涕泪满衣裳。 却看妻子愁何在，漫卷诗书喜欲狂。 白日放歌须纵酒，青春作伴好还乡。 即从巴峡穿巫峡，便下襄阳向洛阳。","tags":[{"name":"古诗词","slug":"古诗词","permalink":"http://yoursite.com/tags/古诗词/"}]},{"title":"CSS3总结系列之一","date":"2017-03-04T06:50:33.000Z","path":"2017/03/04/CSS3总结系列之一/","text":"伪类结构伪类：n遵循线性变化，其取值0、1、2、3、4、…n可是多种形式：nth-child(2n+0)、nth-child(-1n+3)等；注：指E元素的父元素，并对应位置的子元素必须是E 1234E:first-child 其父元素的第1个子元素；E:last-child 其父元素的最后1个子元素；E:nth-child(n) 其父元素的第n个子元素；E:nth-last-child(n) 其父元素的第n个子元素（倒着数）； 空伪类E:empty 选中没有任何子节点的E元素; 目标伪类E:target 结合锚点进行使用，处于当前锚点的元素会被选中，可以实现电梯导航； 排除伪类E:not(selector) 除selector（任意选择器）外的元素会被选中； 伪元素E::first-letter文本的第一个单词或字（如中文、日文、韩文等）； E::first-line 文本第一行； E::selection 可改变选中文本的样式； 1234E::before和E::after在E元素内部的开始位置和结束位创建一个元素，该元素为行内元素，且必须要结合content属性使用；CSS3将伪对象选择符前面的单个冒号(:)修改为双冒号(::)用以区别伪类选择符，但以前的写法仍然有效；即E:after可转化为E::after 颜色RGBA和HSLA：其中的A 表示透明度通道，即可以设置颜色值的透明度，相较opacity，它们不具有继承性，即不会影响子元素的透明度。1234Red、Green、Blue、Alpha即RGBAHue、Saturation、Lightness、Alpha即HSLA不同的颜色表示方法其取值也不相同，具体如下：R、G、B 取值范围0~255 1234H 色调 取值范围0~360，0/360表示红色、120表示绿色、240表示蓝色S 饱和度 取值范围0%~100%L 亮度 取值范围0%~100%A 透明度 取值范围0~1 123注：rgba()和opacity都能实现透明效果，但最大的不同是opacity作用于元素，以及元素内的所有内容的透明度；而rgba()只作用于元素的颜色或其背景色。（设置rgba透明的元素的子元素不会继承透明效果！）；transparent 不可调节透明度，始终完全透明； 文本效果文本阴影text-shadow: 5px 5px 5px #FF0000; 指定了水平阴影，垂直阴影，模糊的距离，以及阴影的颜色; box-shadow 属性适用于盒子阴影 box-shadow: 10px 10px 5px #888888; 123注意：水平偏移量 正值向右 负值向左；垂直偏移量 正值向下 负值向上；模糊度是不能为负值； Text Overflow属性12text-overflow: clip；修剪文本text-overflow:ellipsis； 显示省略符号来代表被修剪的文本 注意：text-overflow: xxx；&quot;(只在 Firefox 浏览器下有效)； 换行如果某个单词太长，不适合在一个区域内，它扩展到外面；CSS3中，自动换行属性允许您强制文本换行 - 即使这意味着分裂它中间的一个字；word-wrap:break-word; 拆分换行：123word-break:normal; 使用浏览器默认的换行规则；word-break: keep-all; 允许在单词内换行；word-break: break-all; 只能在半角空格或连字符处换行； 盒模型box-sizing: content-box(default)|border-box|inherit; 123content-box：border和padding不计算入width之内padding-box：padding计算入width内inherit：指定box-sizing属性的值，应该从父元素继承 圆角如果你在 border-radius 属性中只指定一个值，那么将生成 4 个 圆角,但是，如果你要在四个角上一一指定，可以使用以下规则：1234四个值: 第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角。三个值: 第一个值为左上角, 第二个值为右上角和左下角，第三个值为右下角两个值: 第一个值为左上角与右下角，第二个值为右上角与左下角一个值： 四个圆角值相同 盒阴影与文字阴影类似，可分别设置盒子阴影偏移量、模糊度、颜色（可设透明度），如box-shadow: 5px 5px 5px #CCC1234水平偏移量 正值向右 负值向左；垂直偏移量 正值向下 负值向上；模糊度是不能为负值；inset可以设置内阴影； 注意：设置边框阴影不会改变盒子的大小，即不会影响其兄弟元素的布局。可以设置多重边框阴影，实现更好的效果，增强立体感，符合渐进增强 渐变线性渐变background: linear-gradient(direction, color-stop1, color-stop2, ...); 默认方向是从上至下 可以通过指定水平和垂直的起始位置来制作一个对角渐变：background: -moz-linear-gradient(bottom right, red, blue); 如果你想要在渐变的方向上做更多的控制，你可以定义一个角度，而不用预定义方向（to bottom、to top、to right、to left、to bottom right，等等）：background: linear-gradient(angle, color-stop1, color-stop2); 0deg 将创建一个从左到右的渐变，90deg 将创建一个从下到上的渐变。换算公式 90 - x = y 其中 x 为标准角度，y为非标准角度 径向渐变默认情况下，渐变的中心是 center（表示在中心点），渐变的形状是 ellipse（表示椭圆形），渐变的大小是 farthest-corner（表示到最远的角落） background: radial-gradient(center, shape size, start-color, ..., last-color); 形状为圆形的径向渐变： background: radial-gradient(circle, red, yellow, green); 设置渐变方向，可以用关键字如to top、to right，也可以用角度（正负值均可）如45deg、-90deg等，当以角度做为参数时，可参照下图来使用，0deg从下往上，90deg从左向右，进而可以推算出180deg从上向下透明度（Transparency）CSS3 渐变也支持透明度，可用于创建减弱变淡的效果;为了添加透明度，我们使用 rgba() 函数来定义颜色结点;rgba() 函数中的最后一个参数可以是从 0 到 1 的值，它定义了颜色的透明度：0 表示完全透明，1 表示完全不透明; 过渡补间动画：自动完成从起始状态到终止状态的的过渡；帧动画：通过一帧一帧的画面按照固定顺序和速度播放；特点：当前元素只要有“属性”发生变化时，可以平滑的进行过渡，并不仅仅局限于hover状态； 123456789101112131415161718transition-property: none|all(默认) | property; 设置过渡属性，如width;transition-duration: 5s; 设置过渡时间，默认0s;transition-delay: 2s; 设置过渡延时，默认0s;transition-timing-function：linear 规定以相同速度开始至结束的过渡效果，ease 规定慢速开始，然后变快，然后慢速结束的过渡效果，ease-in 规定以慢速开始的过渡效果，ease-out 规定以慢速结束的过渡效果，linear 规定以相同速度开始至结束的过渡效果，ease 规定慢速开始，然后变快，然后慢速结束的过渡效果，ease-in 规定以慢速开始的过渡效果，ease-out 规定以慢速结束的过渡效果，ease-in-out 规定以慢速开始和结束的过渡效果，cubic-bezier(n,n,n,n) 在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值，设置过渡速度;","tags":[{"name":"CSS3","slug":"CSS3","permalink":"http://yoursite.com/tags/CSS3/"}]},{"title":"面向对象编程系列一","date":"2017-03-04T06:45:43.000Z","path":"2017/03/04/面向对象编程系列一/","text":"原型：概念：所谓原型就是一个函数的prototype属性所引用的对象； 只要声明一个函数，那么原型就存在； 当通过该函数创建出来的每一个对象，都共享此原型； 也就是说上述创建出来的所有对象可以直接访问到原型上的任何成员（属性和方法） 代码块：12345function fun() &#123;&#125;console.log(fun.prototype); //Objectvar fn = new fun();console.log(fn); //funconsole.log(fun.prototype.constructor === fn.__proto__.constructor); //true 原型的本质 原型其本质就是 对象 原型的好处 实现同类对象的数据共享 获取原型的方式 通过函数：functionName.prototype 通过对象：object.__proto__ 代码块：1234function fun() &#123;&#125;console.log(fun.prototype); //Object&#123;&#125;var fn = new fun();console.log(fn.__proto__); //Object&#123;&#125; 原型属性 站在函数的角度，原型可以被称为该函数的原型属性 原型对象 站在对象的角度，原型可以被称为该对象的原型对象 原型的特性 动态性： 给原型扩展成员会直接反应到已创建的对象身上 替换原型对象，不会反映到已创建出来的对象。但是会直接影响之后创建出来的对象 唯一性 由同一函数创建出来的所有对象，共享同一个原型对象 不可变性 对象是无法改变原型对象上的任何成员` 继承性 所有对象都继承自它的原型对象 对象的组成部分 对象自己本身 它的原型 每一个对象都有proto属性；那么就是说，每一个对象都有原型 其中Math为单体对象，它是一个特殊的对象； 数组的原型为Array 对象的原型是Object 代码块：12345var arr = [];console.log(arr.__proto__ === Array.prototype);console.log(Math.__proto__ === Object.prototype);var obj = &#123;&#125;;console.log(obj.__proto__ === Object.prototype); 执行结果全部为：true对象的类型 就是它构造函数的名字 __proto__兼容 非标准属性 代码块： 方法一： 12345678910function getPrototype(obj) &#123; // 判断浏览器是否兼容__proto__ if (obj.__proto__) &#123; // 支持 return obj.__proto__; &#125; else &#123; // 不支持 // 获取该对象的构造函数 // 在通过此函数的prototype属性获取其原型对象 return obj.constructor.prototype; &#125;&#125; 方法二： 123function getPrototype(obj) &#123; return !!obj.__proto__ ? obj.__proto__ : obj.constructor.prototype;&#125; 验证： 123function A() &#123;&#125;var a = new A;console.log(getPrototype(a).constructor); //function A() &#123;&#125;","tags":[{"name":"JS面向对象","slug":"JS面向对象","permalink":"http://yoursite.com/tags/JS面向对象/"}]},{"title":"服务器系列之一","date":"2017-03-04T06:35:48.000Z","path":"2017/03/04/服务器系列之一/","text":"CS架构与BS框架CS架构： Client/Server架构，即服务器/客户端架构。是大家熟知的软件系统体系结构，通过将任务合理分配到Client端和Server端，降低了系统的通讯开销，需要安装客户端才可进行管理操作。 BS架构： B/S结构即浏览器和服务器结构，它是随着Internet技术的兴起，对C/S结构的一种变化或者改进的结构。在这种结构下，用户工作界面是通过WWW浏览器来实现，极少部分事务逻辑在前端(Browser)实现，但是主要事务逻辑在服务器端(Server)实现，形成所谓三层3-tier结构。B/S结构是WEB兴起后的一种网络结构模式，WEB浏览器是客户端最主要的应用软件。这种模式统一了客户端，将系统功能实现的核心部分集中到服务器上，简化了系统的开发、维护和使用。客户机上只要安装一个浏览器（Browser），如Netscape Navigator或Internet Explorer，服务器安装Oracle、Sybase、Informix或 SQL Server等数据库。浏览器通过Web Server同数据库进行数据交互。 这样就大大简化了客户端电脑载荷，减轻了系统维护与升级的成本和工作量，降低了用户的总体成本(TCO)。 区别： CS是BS的升级； Client/Server是建立在局域网的基础上的； Browser/Server是建立在广域网的基础上的； 1．硬件环境不同：C/S 一般建立在专用的网络上，小范围里的网络环境，局域网之间再通过专门服务器提供连接和数据交换服务。B/S 建立在广域网之上的， 不必是专门的网络硬件环境。例如电话上网，租用设备，信息管理，有比C/S更强的适应范围，一般只要有操作系统和浏览器就行； 2．对安全要求不同：C/S 一般面向相对固定的用户群， 对信息安全的控制能力很强， 一般高度机密的信息系统采用C/S 结构适宜，可以通过B/S发布部分可公开信息。B/S 建立在广域网之上, 对安全的控制能力相对弱，面向是不可知的用户群； 3．对程序架构不同：C/S 程序可以更加注重流程,，可以对权限多层次校验,，对系统运行速度可以较少考虑。B/S 对安全以及访问速度的多重的考虑,，建立在需要更加优化的基础之上，比C/S有更高的要求。 B/S结构的程序架构是发展的趋势，从MS的.Net系列的BizTalk 2000 Exchange 2000等，全面支持网络的构件搭建的系统.。SUN 和IBM推的JavaBean 构件技术等，使 B/S更加成熟； 4．软件重用不同：C/S 程序可以不可避免的整体性考虑，构件的重用性不如在B/S要求… CS架构的优点就是基于客户机和服务器模式,大部分的运算是在客户机上运行,从而提高一定的效率,但是也因为他在客户机上运行,所以要安装客户端,也导致了软件维护和升级时的不方便,需要程序员亲自进行升级配置； 然后BS架购的优点在于,软件维护和升级方便,只要能上网就能升级了且在很多地方都能够直接使用软件,而不需要安装,前提是你要能登陆到服务器； 服务器与客户端服务器： 服务器，也称伺服器，是提供计算服务的设备。由于服务器需要响应服务请求，并进行处理，因此一般来说服务器应具备承担服务并且保障服务的能力。 服务器的构成包括处理器、硬盘、内存、系统总线等，和通用的计算机架构类似，但是由于需要提供高可靠的服务，因此在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。 在网络环境下，根据服务器提供的服务类型不同，分为文件服务器，数据库服务器，应用程序服务器，WEB服务器等； 客户端： 客户端（Client）或称为用户端，是指与服务器相对应，为客户提供本地服务的程序。除了一些只在本地运行的应用程序之外，一般安装在普通的客户机上，需要与服务端互相配合运行。因特网发展以后，较常用的用户端包括了如万维网使用的网页浏览器，收寄电子邮件时的电子邮件客户端，以及即时通讯的客户端软件等。对于这一类应用程序，需要网络中有相应的服务器和服务程序来提供相应的服务，如数据库服务，电子邮件服务等等，这样在客户机和服务器端，需要建立特定的通信连接，来保证应用程序的正常运行； wamp安装及配置安装（傻瓜式安装）更改服务器配置: http://x.x.x.x:80 为本机ip地址，相当于 localhost，可通过 ipconfig 查出 打开文件名为 httpd.conf 文件，本机（我自己的电脑）文件地址为：D:\\OfficeSoftware\\wampserver\\wamp\\bin\\apache\\Apache2.2.21\\conf 注意：该文件里面 # 标注的都是注释内容 Listen 80 ,SeverName localhost:80 表示该端口号为80 ,修改端口号就修改这两个地方 打开该文件，找到 Allow form 127.0.0.1改为 Allow from all，表示服务器可以访问所有IP 修改wamp默认文件地址： DocumentRoot &quot;E:\\doc\\ajax&quot; 和 &lt;Directory &quot;E:\\doc\\ajax&quot;&gt; 两处，可以更改服务器默认地址 注意：修改配置文件需要重启服务 静态资源与动态资源静态资源： 相当于前台的HTML，CSS，JS等 动态资源：－ 相当于后台的JSP，ASP，PHP等 区别： 假设我客户端浏览器访问的是静态资源，服务器直接返回静态资源 假设我客户端访问的是动态资源，服务器会把动态资源转换成静态资源响应给客户端浏览器. 局域网和广域网局域网： 局域网（Local Area Network，LAN）是指在某一区域内由多台计算机互联成的计算机组。一般是方圆几千米以内。局域网可以实现文件管理、应用软件共享、打印机共享、工作组内的日程安排、电子邮件和传真通信服务等功能。局域网是封闭型的，可以由办公室内的两台计算机组成，也可以由一个公司内的上千台计算机组成。 局域网（Local Area Network，LAN）是在一个局部的地理范围内（如一个学校、工厂和机关内），一般是方圆几千米以内，将各种计算机，外部设备和数据库等互相联接起来组成的计算机通信网。它可以通过数据通信网或专用数据电路，与远方的局域网、数据库或处理中心相连接，构成一个较大范围的信息处理系统。 局域网可以实现文件管理、应用软件共享、打印机共享、扫描仪共享、工作组内的日程安排、电子邮件和传真通信服务等功能。局域网严格意义上是封闭型的。它可以由办公室内几台甚至上千上万台计算机组成。决定局域网的主要技术要素为：网络拓扑，传输介质与介质访问控制方法。局域网由网络硬件（包括网络服务器、网络工作站、网络打印机、网卡、网络互联设备等）和网络传输介质，以及网络软件所组成。 广域网： 广域网（WAN，Wide Area Network）也称远程网（long haul network ）。通常跨接很大的物理范围，所覆盖的范围从几十公里到几千公里，它能连接多个城市或国家，或横跨几个洲并能提供远距离通信，形成国际性的远程网络。 覆盖的范围比局域网（LAN）和城域网（MAN）都广。广域网的通信子网主要使用分组交换技术。广域网的通信子网可以利用公用分组交换网、卫星通信网和无线分组交换网，它将分布在不同地区的局域网或计算机系统互连起来，达到资源共享的目的。如因特网（Internet）是世界范围内最大的广域网。 广域网是由许多交换机组成的，交换机之间采用点到点线路连接，几乎所有的点到点通信方式都可以用来建立广域网，包括租用线路、光纤、微波、卫星信道。而广域网交换机实际上就是一台计算机，有处理器和输入/输出设备进行数据包的收发处理。 区别： 局域网是在某一区域内的，而广域网要跨越较大的地域，那么如何来界定这个区域呢？例如，一家大型公司的总公司位于北京，而分公司遍布全国各地，如果该公司将所有的分公司都通过网络联接在一起，那么一个分公司就是一个局域网，而整个总公司网络就是一个广域网。 DNS DNS（Domain Name System，域名系统），因特网上作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。通过主机名，最终得到该主机名对应的IP地址的过程叫做域名解析（或主机名解析）。DNS协议运行在UDP协议之上，使用端口号53。在RFC文档中RFC 2181对DNS有规范说明，RFC 2136对DNS的动态更新进行说明，RFC 2308对DNS查询的反向缓存进行说明。 IP 网络之间互连的协议（IP）是Internet Protocol的外语缩写，[1] 中文缩写为“网协”. 网络之间互连的协议也就是为计算机网络相互连接进行通信而设计的协议。在因特网中，它是能使连接到网上的所有计算机网络实现相互通信的一套规则，规定了计算机在因特网上进行通信时应当遵守的规则。任何厂家生产的计算机系统，只要遵守IP协议就可以与因特网互连互通。IP地址具有唯一性，根据用户性质的不同，可以分为5类。另外，IP还有进入防护，知识产权，指针寄存器等含义。 域名 域名（Domain Name），是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置，地理上的域名，指代有行政自主权的一个地方区域）。域名是一个IP地址上有“面具” 。一个域名的目的是便于记忆和沟通的一组服务器的地址（网站，电子邮件，FTP等）。","tags":[{"name":"服务器","slug":"服务器","permalink":"http://yoursite.com/tags/服务器/"}]},{"title":"PHP系列之一","date":"2017-03-04T06:25:17.000Z","path":"2017/03/04/PHP系列之一/","text":"功能 运行在服务器端 跨平台：服务器可以是多种平台的服务器，比如Linux、Windows、Unix 脚本语言：它是通过编写脚本，也就是一行行的计算机指令，来指挥服务器来工作的 免费：免费使用（天下还真有免费的午餐） PHP代码标识 &lt;?php ?&gt; 就像可以编写JavaScript脚本语言需要写在 &lt;script&gt; &lt;/script &gt;标签之间一样，可以在页面中编写PHP代码写在 &lt;?php?&gt; 标签之间，但注意后面的 ?&gt; 是可以省略的 语句输出： echo &#39;Hello world!！&#39;; 计算表达式 不同于HTML和CSS，在php中我们可以做计算 &lt;?php echo 12*3;?&gt; 字符串 一个字符串是用双引号括起来的一个词或一个句字,也可以用单引号括起来,可以把两个字符用连接符连接起来 注意:连接符可以连接多个字符串 &lt;?php echo &#39;Hi,&#39;.&#39;World!&#39;;?&gt; 在php中字符串连接符是用点（.）来表示的，这一点比较特殊，其它语言中是用加号（+）来表示的 语句结束符 有的小伙伴们是不是已经注意在每一条PHP代码行结尾处都会有一个分号；。对的，这点注意，在PHP编程中需要在每条语句的末尾加入分号 ； 但要注意，分号；一定在半角状态下输入噢 注释 在PHP中也有注释语句：用 双斜杠（//） 来表示。其它语言中，Html中使用，CSS中使用 /*注释语句*/ 变量 变量是用于存储值的，这里变量声明用 $ $var = &quot;PHP&quot;; 命名规则 变量名必须以字母或下划线 “_”开头,如”$_name”,”$name” ,”$name2”等，但是”$9name”是不对的 变量名只能由字母、数字、以及“_”组成，还能包含汉字。如”$_qq”,”$qq308” ,”$my_apple”，“比如”$name我等”，但是”$name*”是不对的 变量名不允许包含空格。当变量名由多个单词组成，建议使用“_”进行分隔（比如 $my_apple），俗称下划线法，或者以大写字母开头比如 $myApple，俗称骆驼式命名法（也称驼峰命名法） 注意：在PHP中变量名是区分大小写的，如“$my_book”与“$my_Book”代表两个不同的变量 数据类型布尔类型 尔类型（boolean）：只有两个值，一个是TRUE，另一个FALSE，可以理解为是或否。它不区分大小写，也就是说”TRUE”和“true”效果是一样的。主要用在条件结构（条件结构在后面部分会介绍）中，例如判断是否满足条件的时候，是用“true”表示满足，用“false”表示不满足。需要注意的是，当我们用”echo”指令输出布尔类型时，如果是“true”则输出的是“1”，“false”则什么也不输出。我们可以使用“var_dump”函数，获取它真正的数据类型。 &lt;?php $flag=true; ?&gt; 整型 整型（integer）：类似于常见的整数。它可以用十进制、八进制、十六进制指定。十进制就是日常使用的数字；八进制，数字前必须加上“0”(这个0是阿拉伯数字0，可不是英文字母“欧”哦)；十六进制，数字前必须加“0x” (这个0也是阿拉伯数字0，不是“欧”哦 12345$data_int = 1234; // 十进制数 $data_int = -567; // 一个负数$data_int = 0123; // 八进制数（等于十进制的 83）$data_int = 0x1a; // 十六进制数（等于十进制的 26）?&gt; 123456789##### 浮点型- 浮点型（浮点数、双精度数或实数），也就是通常说的小数，可以用小数点或者科学计数法表示。科学计数法可以使用小写的e，也可以使用大写的E- ```&lt;?php $num_float = 1.234; //小数点 $num_float = 1.2e3; //科学计数法，小写e $num_float = 7.0E-10; //科学计数法，大写E ?&gt; ` 字符串 字符串是由一系列字符组成，在PHP中，字符和字节一样，也就是说，一共有256种不同字符的可能性 字符串型可以用三种方法定义：单引号形式、双引号形式和Heredoc结构形式 当双引号中包含变量时，变量会与双引号中的内容连接在一起；当单引号中包含变量时，变量会被当做字符串输出。 当字符串很长,可以使用Heredoc结构形式的方法来解决该问题，首先使用定界符表示字符串（&lt;&lt;&lt;），接着在“&lt;&lt;&lt;“之后提供一个标识符GOD，然后是字符串，最后以提供的这个标识符结束字符串 $string1 = &lt;&lt;&lt;GOD; coding... GOD; 空类型 NULL（NULL）：NULL是空类型，对大小写不敏感，NULL类型只有一个取值，表示一个变量没有值，当被赋值为NULL，或者尚未被赋值，或者被unset()，这三种情况下变量被认为为NULL 常量 常量可以理解为值不变的量（如圆周率）；或者是常量值被定义后，在脚本的其他任何地方都不可以被改变。PHP中的常量分为自定义常量和系统常量 自定义常量是根据我们开发的需要，而定义的常量，它通过使用PHP中的函数define()定义 bool define(string $constant_name, mixed $value[, $case_sensitive = true]) 第一个参数“constant_name”为必选参数，常量名称,即标志符，常量的命名规则与变量的一致，但是要注意哦，它可不带美元符号哦。第二个参数“value”为必选参数，它是常量的值。第三个参数“case_sensitive”为可选参数，指定是否大小写敏感，设定为true表示不敏感，一般不指定第三个参数的情况下，默认第三个参数的值为false 注： string表示参数类型为字符串类型，mixed表示参数类型可以接受为多种不同的类型，case_sensitive = true表示默认为布尔类型TRUE 取值(constant)： mixed constant(string constant_name) 第一个参数constant_name为要获取常量的名称，也可为存储常量名的变量。如果成功则返回常量的值，失败则提示错误信息常量没有被定义。（注：mixed表示函数返回值类型为多种不同的类型，string表示参数类型为字符串类型） 常量是否被定义: bool defined(string constants_name) 它只有参数constant_name，指的是要获取常量的名称，若存在则返回布尔类型true，否则返回布尔类型false; （注：bool表示函数返回值类型为布尔类型） 系统常量 FILE :php程序文件名。它可以帮助我们获取当前文件在服务器的物理位置 LINE :PHP程序文件行数。它可以告诉我们，当前代码在第几行 PHP_VERSION:当前解析器的版本号。它可以告诉我们当前PHP解析器的版本号，我们可以提前知道我们的PHP代码是否可被该PHP解析器解析 PHP_OS：执行当前PHP版本的操作系统名称。它可以告诉我们服务器所用的操作系统名称，我们可以根据该操作系统优化我们的代码 资源 资源（resource）：资源是由专门的函数来建立和使用的，例如打开文件、数据连接、图形画布。我们可以对资源进行操作（创建、使用和释放）。任何资源，在不需要的时候应该被及时释放。如果我们忘记了释放资源，系统自动启用垃圾回收机制，在页面执行完毕后回收资源，以避免内存被消耗殆尽 $file_handle 数组类型普通数组 普通数组的定义，与遍历： for($i=0;$i&lt;count($array);$i++){} 关联数组 $array=array(&quot;username&quot;=&gt;&quot;zhangsan&quot;)； foreach($array as $key=&gt;$val){} 二维数组 数组里面的元素是数组 $array1=array(array(),array(),array())； for($i=0;$i&lt;count($array1);$i++){foreach($array[$i] as $key=&gt;$val){} 函数 function fn($username=&quot;zhangsan&quot;){echo &quot;lisi vs &quot;.$username;} 输出函数 print_r(); 输出数组里面的信息 var_dump(); 输出数组里面的详细信息 count(); 获取数组函数 file_get_contents(); 读取一个文件里面的 内容 in_array(); 判断数组当中是否存在某个元素 array_key_exists; 判断数组当中是否存在某个key 本文只是让你简单的了解PHP，只是入门级","tags":[{"name":"PHP","slug":"PHP","permalink":"http://yoursite.com/tags/PHP/"}]},{"title":"使用hexo搭建简单静态博客并部署至github","date":"2017-03-04T05:55:58.000Z","path":"2017/03/04/hexo搭建博客/","text":"搭建静态博客安装前提： node 详情请见node相关教程 Git 详情请见Git相关教程 搭建： 在要创建的文件夹下打开CMD执行 npm install hexo-cli -g 进行Hexo的安装； 执行 hexo init &lt;folder&gt; ，其中folder为博客根目录名； 切换到根目录下， cd &lt;folder&gt; ； npm install 可执行可不执行 最后，启动一个本地博客服务器， hexo server ; 访问： 在浏览器地址栏输入 http://localhost:4000/即可浏览静态博客 注意：访问时，本地的服务器是要开启的，即不要关闭CMD命令行 部署至github前提： 添加SSH Keys 查看是否已经有了ssh密钥： ｀cd ~/.ssh `,如果没有密钥则不会有此文件夹，有则备份删除; ssh-keygen -t rsa -C &quot;&lt;email&gt;&quot;; 一直回车，最后会让输入密码，这里可以输入也可以不输入 这里还要设置Git的username和email，会得到两个文件 id_rsa 和 id_rsa.pub 最后在自己的github账号–&gt;Settings–&gt;SSH and GPG keys–&gt;点击按钮 New SSH key,将 id_rsa.pub文件里的内容添加至key里 一个空仓库 创建github仓库详情请见教程； 这里创建的仓库地址为http和ssh两种，这里选择用ssh，但是需要提前配置 ssh keys ，如果用http容易报错： http:https://github.com/ChangJingjing/ChangJingjing.github.io.git ssh:git@github.com:ChangJingjing/ChangJingjing.github.io.git； 注意：在创建仓库时，仓库名要和用户名一致，否则在部署完成之后访问不到页面，显示404； 若是仓库不是空仓库，则需要在设置中删除该仓库并重建 配置信息 在 _config.yml 中修改参数，如下：123deploy: type: git repo: git@github.com:ChangJingjing/ChangJingjing.github.io.git 部署 安装 hexo-deployer-git 自动提交插件， npm install hexo-deployer-git --save; Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上，hexo deploy,但是这种方法容易报错 使用 hexo generate --deploy 或者 hexo deploy --generate让 Hexo 在生成完毕后自动部署网站 创建博客文 hexo new [layout] &lt;title&gt;;可在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局 详细配置信息请见Hexo中文官网 https://hexo.io/zh-cn/","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]}]